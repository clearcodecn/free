// Code generated for package template by go-bindata DO NOT EDIT. (@generated)
// sources:
// template/default/index.gohtml
package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateDefaultIndexGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x6b\x73\xd4\x46\xb6\xdf\xfd\x2b\x3a\x22\xc5\xd8\x05\x1a\xf9\x05\x04\x33\x33\x7b\x1d\xf3\x08\x10\x08\xd8\x90\xc7\x6e\x6d\x6d\xb5\xa4\x9e\x51\xdb\x92\x5a\x74\xf7\xf8\x01\xd7\x55\x26\x09\x8f\xb0\x10\x73\xef\x4d\x96\x04\xd8\x5d\xd8\x3c\x6e\x36\xe4\x9a\xa4\x96\x0b\xc1\x21\xe1\xc7\x60\xcd\xd8\x9f\xf2\x17\x6e\xb5\x5a\x33\x23\x69\x24\xcf\x38\x31\xbe\x54\xed\xce\x87\x79\xb4\x4e\x9f\x77\x9f\x3e\xe7\x74\x4f\xe1\xa5\xfd\x6f\x8c\x9d\x7a\xe7\xc4\x01\x60\x71\xc7\x2e\xf5\x14\xc4\x07\x98\x75\x6c\x97\x8d\x70\xab\xa8\x58\x9c\x7b\x23\x9a\x36\x33\x33\x93\xe7\xd6\x9c\x83\x6c\x04\xcb\x79\x42\x2b\x0a\xb0\xa1\x5b\x29\x2a\x67\x2d\x75\xec\xb8\x22\xe6\x21\x68\x96\x7a\x00\x00\xa0\xc0\x31\xb7\x51\xe9\xdc\x39\x90\x37\x89\x03\xb1\x9b\x3f\x25\x06\xc0\xfc\x3c\xf8\x77\xe0\x5f\xbe\xb8\xb2\x7c\xcf\xbf\x70\x6d\xf5\xc1\xe3\xfa\xd3\x1f\xfc\xbf\x7d\x5a\xbf\xf9\x7e\xfd\xc7\xff\xa8\xdf\xfb\xb4\xa0\xc9\x89\x12\x89\x83\x38\x04\x82\xba\x8a\xce\x54\xf1\x74\x51\x19\x23\x2e\x47\x2e\x57\x4f\xcd\x79\x48\x01\x86\xfc\x55\x54\x38\x9a\xe5\x9a\x60\x7a\x1f\x30\x2c\x48\x19\xe2\xc5\x2a\x2f\xab\xaf\x28\x5a\x16\xa2\xb7\xd5\xd3\xa3\xea\x18\x71\x3c\xc8\xb1\x6e\x47\x71\x1d\x3e\x50\x44\x66\x05\xc5\xa7\x36\x9f\xce\x60\x93\x5b\x45\x13\x4d\x63\x03\xa9\xc1\x8f\x9d\x00\xbb\x98\x63\x68\xab\xcc\x80\x36\x2a\x0e\xec\x04\xcc\xa2\xd8\x9d\x52\x39\x51\xcb\x98\x17\x5d\xa2\x00\x17\x3a\xa8\xa8\x4c\x63\x34\xe3\x11\xca\x05\x6e\x89\xfc\x25\x55\x05\xaf\x12\xc2\x19\xa7\xd0\x03\xaa\x1a\xd2\xb4\xb1\x3b\x05\x28\xb2\x8b\x0a\xe3\x73\x36\x62\x16\x42\x5c\x01\x16\x45\x65\x69\x0c\x36\xa2\x69\x86\xe9\xe6\x75\x42\xb8\xc1\x58\xde\x20\x8e\xa6\x37\xd0\x68\xc3\xf9\xfe\x7c\xbf\x66\x30\xd6\x1a\xcb\x3b\xd8\xcd\x1b\x8c\x35\xa5\x12\x84\x0f\x12\x97\x83\xd1\x19\xc4\x88\x83\x12\xb4\xb9\x35\x22\xa9\xfd\xdb\x39\x6d\x06\xe9\x93\x90\x32\xad\x4c\x5c\xae\x42\x09\x1e\x60\x8f\x0e\x34\x08\xcc\x2b\x6d\x7c\xc7\x84\x5d\xbd\xf4\xb5\xbf\x74\x73\xe5\xf1\x07\xc0\x60\x6c\x1d\xa2\x02\x7f\x80\x23\x1b\x69\x41\x93\xee\x56\xd0\x89\x39\x57\xea\xe9\x29\xb8\x70\x1a\x18\x36\x64\xac\xa8\xb8\x70\x5a\x87\x14\xc8\x0f\x15\xcd\x7a\xd0\x35\x55\xc7\x6c\x0c\x98\x90\x4e\x01\xbd\x22\x3f\xcb\x78\x16\x99\x2a\x27\x9e\x12\x32\x63\xe2\x26\x1e\x61\x77\x88\x5d\x44\xc3\x67\xc1\x73\x18\xa7\xa2\xea\x14\xba\x66\xc3\x3c\xdb\x22\x90\x01\x34\x6e\x40\x97\x21\x28\x43\xd5\x83\x1e\xa2\xaa\x67\x43\x17\xa9\x44\x0c\x0c\xcc\x8a\xf7\xb2\x8d\x3d\xd5\x22\x14\x9f\x15\x14\x6d\x05\x40\x8a\xa1\x6a\x61\xd3\x44\x6e\x51\xe1\xb4\x8a\x94\x52\x41\xc3\x11\x2e\x34\x18\xf9\x21\x54\xeb\x7f\xb7\xe8\x3f\xfe\xb8\xfe\xe4\xef\xfe\xb7\x8b\xfe\xf5\x0f\xeb\x37\xdf\xf7\xef\x3f\x59\xbd\xfc\x75\xed\xea\x07\x6b\xff\xb9\xd4\xd4\x75\x00\xaf\x57\x39\x27\x6e\x42\x0e\x4e\x2a\x15\x1b\x51\x05\xf0\x39\x0f\x15\x15\x09\xa3\x00\x13\x72\x18\x3e\x13\x0a\xb1\x6d\xe8\x31\xd4\x18\x86\xb4\x82\x78\x51\xd9\x26\x51\xb0\xfe\x01\x25\x26\xbd\x78\x05\x92\x08\x45\x52\x62\x37\x89\x09\x48\xf9\x44\x1a\x07\x99\x42\x41\xb6\x40\x1c\x8c\xda\x50\x17\x16\x3f\x15\x90\x15\x66\xc3\x15\xc8\x31\x71\x93\xda\x65\x1e\xcc\x10\x43\xc5\x86\x00\x2f\x68\x02\x24\xaa\x37\x29\x57\xe8\x94\xed\x06\x97\xf2\x35\x3c\xa5\x25\x2f\x36\xa3\xbc\x27\xd8\xa8\xda\x09\x26\x84\x2f\x3a\x54\x85\x55\x4e\x12\xb0\xa1\xbf\x47\xe0\x55\xcc\x91\x03\xa0\xc1\xf1\x34\x4a\x01\x6e\xf3\x39\x55\xac\x96\x88\xbf\xad\x7d\xf9\xa7\xb5\xbb\xff\x1b\x53\x05\xa3\x2a\x71\xed\x39\xa5\xd4\x6b\x54\x29\x45\x2e\xef\x0b\xf5\x10\x73\x9b\x96\x4e\x6c\xdc\x1d\x93\x26\x25\x9e\x49\x66\x92\x66\xc8\x66\xb3\x39\x23\x34\x4b\x8b\xed\x40\xa1\x8d\xa7\xc2\x1b\x62\x7e\xd6\x24\x94\x4a\xa7\xe1\x55\x16\x64\x1e\xf1\xaa\x5e\xb8\x42\xd2\x1d\xaa\x34\x31\x31\x0e\x56\x97\xfe\xb6\xf6\xc9\x85\x54\xe9\x93\x2e\xd0\xe4\xd8\x41\x6e\x35\xea\x8e\x36\x32\xf5\xb9\x18\xcf\xe9\xc8\xe2\x9a\x68\xa2\x13\x0a\x54\x62\x41\x8e\x55\x75\x66\x50\xac\xa3\xde\x69\x68\x63\xb3\x38\xd0\x37\xaf\x80\xc6\x92\xfa\x83\x6e\x43\x77\x4a\x29\xd5\x6e\x7f\x50\xfb\xf8\x32\xe8\x42\x88\x5f\x4c\xb7\x3f\x8d\xae\x7f\xe1\xab\xb5\xf7\xbe\x7a\x3e\x74\x8f\x30\xe2\xa6\x90\x5c\xbb\xb9\x58\xbb\xbd\x0c\x8e\x4c\xbc\x71\xbc\xa3\xc1\x34\x13\x4f\x6f\x8a\x27\x0b\x0e\xab\xae\x8d\xc4\xd3\x97\xcf\x6d\xb3\x31\xe3\x2c\x8f\xd9\x01\xc7\xe3\x73\xbd\x8c\xd1\xd7\x31\xe3\x7d\xf3\x9b\xee\xf0\x83\xcf\xd1\xe1\xeb\x97\xbf\xf1\x17\xff\xe4\x5f\xbe\xb1\x7a\xf7\xab\xcd\x75\xf9\xc1\x5f\xe5\xf2\x2f\x9f\x63\x8c\xe6\xa5\xd5\x4f\x8f\xbf\xde\xee\x01\x99\xb8\x01\x10\x58\x10\x34\xac\xa2\xc2\x18\xdd\x89\x39\xa2\x13\x1c\x72\x30\x02\x02\xa4\xc2\x48\x59\x36\x6a\xf2\x17\x0d\x90\x3a\x34\x2b\x08\x04\xef\xaa\x47\xb1\x03\xe9\x5c\x87\xe9\x01\x0a\x6e\x8d\xe8\x36\x31\x82\x5c\x05\x37\x25\x0a\x56\x51\x27\xf2\x8d\x57\xfd\xca\xc3\xda\xc2\xf9\x9f\x9f\xdc\x4c\x66\x06\x86\x85\x8c\x29\xd5\xc0\xd4\xb0\x51\xea\xfe\xbf\xdd\xd5\x99\xb7\x0f\xc4\xd2\x80\x4c\x4e\xb5\x06\xab\x1b\x94\xaa\xb5\x14\x36\x4f\x32\x8e\x1d\xc4\xb6\x5a\xb2\xe4\xc6\x9f\x0a\x93\xe5\x12\xd8\x2d\xa7\xed\xdb\xc9\xd7\xea\x83\x2f\xfd\xc5\x47\xb5\x8f\xbf\x5d\xbb\xb4\x28\xe4\x8e\x2a\x52\xd4\x24\x91\x88\xc2\xf0\x59\x24\xc2\x49\x9e\x59\xd0\x24\x33\x13\xc4\x98\x62\x13\x28\x88\x2c\x5b\x22\xd1\x0c\xa4\x2e\x76\x2b\x1b\x75\xf2\x86\x14\x89\x85\xbb\x61\x9e\xd7\x07\x7a\x49\x55\xb3\x57\x27\xb6\xed\x98\x55\x36\x5d\xe9\x21\x8f\xd1\x04\xb9\x5d\x8c\xe7\xb4\x0f\x6d\x38\xdf\x6b\x94\x7f\x15\xcc\xad\xaa\x1e\x54\x7e\x67\x0d\xf5\xac\xa5\xf6\xf7\x0f\x68\x13\x2d\x31\xd5\x09\x0b\x52\xa4\xe9\x36\xd1\x35\x07\x32\x8e\xa8\x36\x7e\x60\x74\xff\xb1\x03\x79\xc7\xcc\x8c\xb3\xed\x39\xc0\x3f\x56\x96\x3f\xec\x32\x67\x2c\x68\x55\x3b\x31\x22\xec\x5a\x26\xd4\x69\x86\x03\x42\x1d\x15\xbb\x36\x76\x11\x70\xe6\xd4\x41\xf1\xe6\x98\x6a\x7f\x5a\x8a\x8c\x5d\xaf\xca\x63\x13\xc3\x1a\xa2\x51\x9f\x08\x5b\x2b\xc0\xb3\xa1\x81\x2c\x62\x9b\x88\x16\x95\x09\x04\xa9\x61\xc5\x4b\x88\x70\x4c\x4b\x32\x2b\x50\xb6\xd9\x3c\xe0\xb8\xa9\x7b\xa9\x63\xb5\x51\x08\xfd\x22\x03\x84\x39\x8f\x17\x14\x2f\x49\x29\x83\x0c\x40\xd4\x29\x45\x85\x18\x5c\x7c\x51\xd1\x5c\xa2\x04\x7a\x0b\x72\xc3\x02\xeb\x90\x00\xc4\x05\x87\x30\x7f\xad\xaa\x2b\xa5\x00\x58\xd8\x4b\x46\x54\xf9\xde\x93\xee\x59\x9b\x20\x9d\x92\x26\x01\xe3\x90\xb6\x49\x1a\xb3\x08\x87\xb4\x5b\x81\x04\xec\xd6\xc9\x23\x9c\xa2\x3d\x0b\x49\x91\x91\x22\x8f\xa8\x02\x18\x99\x71\x6b\x1d\x24\x74\xaa\x5b\xd9\x04\xac\x90\x2d\x56\x99\xb7\xe2\x49\xf8\xb5\xa0\xb9\x70\xba\xd4\xd3\x53\x70\x20\x76\x01\x25\x22\x59\x14\x5f\x1b\xdd\x0a\x86\x0c\xe1\x5b\x0d\x2d\x4c\x56\x1d\x9d\x70\x4a\x5c\x20\xd6\x87\x6a\x20\x97\xc7\xbb\x17\x1d\xba\x1b\x01\x8c\x35\xd0\x86\x4e\xb5\x10\x34\x83\x0d\x44\x54\x04\xb2\x77\x27\x23\xb1\x7f\xe1\xbb\x95\xe5\x7b\x05\xcd\x1a\x48\x60\xf1\x1a\x48\x6c\x04\x4d\xc9\x8e\x53\xe5\xc8\x4c\x59\xed\xb5\xdb\xdf\xac\xdd\x7d\x5c\xbf\xb5\xb4\xf2\xfd\x35\xff\xc2\x23\xff\xf3\x4b\x2b\x3f\x7c\x56\xbf\x7e\xd1\x5f\xbc\x22\x89\xd4\x97\xee\xd6\xaf\x5f\x5c\x7d\xef\x47\xff\xca\xad\x67\x0b\xef\xfa\x8b\x5f\xaf\x3e\xf8\xeb\xea\x83\xcf\x6a\xdf\x5d\x5a\xbb\x75\xb1\x7e\x6b\xa9\x76\xe7\x52\xfd\xde\xa7\xf5\x77\x1f\xaf\x3c\xbd\x5b\x3b\x7f\xff\xe7\x27\x57\x57\x7e\x7a\xba\xb2\xfc\xa1\xff\xf9\x7f\xfb\x4b\x0f\x6b\x7f\xfd\xa2\x7e\xfb\x8f\xcf\x16\xce\xcb\xb2\xe2\xd9\xc2\xbb\x05\x9d\x6a\xed\x7c\x84\x7b\xcb\x9f\xbf\x58\x79\xfc\xc7\x95\xef\xaf\xd5\x3e\xf9\xaf\x9f\x9f\x5c\x5d\xbd\xff\xa8\xf6\xd1\xfd\xda\xd5\xf3\xb5\xe5\xeb\x92\xc6\xb3\x85\x77\xdb\x03\x16\xfc\x85\x4b\x28\x19\x74\x53\x83\xb3\x14\x40\xea\x28\x25\x16\xc3\x64\x74\xf3\x52\xe2\x9a\x97\x12\x65\x61\xab\x3c\x69\xec\xbd\xdc\x05\x3a\x77\x1b\x59\x71\x10\xa7\x95\x52\x94\x3e\xd8\x4e\xe1\x99\x2a\xd9\x97\xbe\x2f\x64\x63\x64\xc8\x20\xae\xd9\xc2\xb9\xf2\xe3\xd3\xfa\x47\x5f\xf9\xdf\x2f\xf9\x57\xfe\x9e\x89\x53\x88\x92\xb9\x40\x42\xdf\x6f\x34\x18\x3b\x35\xee\x84\x12\x22\x30\x94\xcc\x24\x1d\x3f\x9a\x4b\x6c\xbc\xda\x48\x34\x92\xc4\xd6\x36\x9c\xb5\xc1\x5b\x83\xd1\x7c\x25\x27\xbb\xdf\x20\x07\x76\x80\xde\x06\xb9\x3c\x76\x4d\x34\x0b\x76\x80\x01\x99\xb0\x58\x83\x19\xb8\xbc\x18\x2a\xff\xf6\xb7\xfe\x9f\x17\x7e\x7e\x72\x53\x20\x6b\xcf\xdb\x52\xbc\x20\x05\x89\xe4\x27\x8a\x04\x73\x1b\x6d\x00\x41\xed\x93\xfb\xfe\xf5\x2f\x65\xf3\x22\x82\xa6\x51\x50\x74\xcd\x47\x50\xca\xd6\x6e\x3c\x5c\xbb\xf1\x20\x82\xa6\x8c\x5d\xcc\xac\x53\xd8\xe9\xc0\x52\xa9\xb5\x3d\xb4\x79\x61\xa4\x32\x97\x51\x35\xdc\x39\x4a\x2b\xcb\x57\xeb\x3f\x3c\xa8\xdf\x39\x1f\x75\xca\x54\x22\x29\xd9\x5f\x5a\x62\x2c\xc1\x84\x17\xa7\x86\xe1\x14\x3f\x4c\x71\x24\x20\xbe\x30\x47\xdd\xad\xc4\x9c\xd3\x6c\xf3\x4e\xb3\x2b\xf7\x84\xd4\x04\x8e\xae\x0e\x03\x9d\xcc\xaa\x32\x3d\xce\x72\xd5\xc4\xb2\x11\x53\x83\xdd\xa0\x6d\xdf\x88\xcd\x6a\xcb\xe7\x95\x44\x3d\x61\x4a\x67\x00\xbf\x01\x39\xe9\x26\x39\x30\x02\x72\xb5\x1b\x77\xc4\xd7\xf9\x75\x7b\x01\xb2\x1d\x10\x20\x87\x9e\x87\x5c\xb3\x1d\xa5\xac\x18\x58\xd5\x30\x10\x63\x01\x66\x39\x62\x42\xb7\x82\x68\x6e\xbd\x9a\x76\xbd\x3a\xab\x65\xca\x4c\x55\x61\xa7\x12\x53\x15\x76\x2a\xc1\xe9\x82\x60\x99\x51\x43\x1e\x6f\x50\x04\x39\x3a\x39\x3e\x46\x4c\xd4\x2b\xcf\x94\x86\x76\xf5\xef\xb4\x10\xae\x58\x3c\xf8\x1a\x28\x2a\x14\x4a\xe4\xff\xf3\x7d\xf3\x8a\x96\x4d\x38\x69\x1f\x9d\x98\xeb\x35\x34\x02\x46\xad\xe1\xd8\x94\x60\x85\x2b\xa5\x31\xe1\x19\xc1\xf7\x82\x66\x0d\xaf\x5f\x15\x25\xa9\x06\x29\x79\x87\x82\xd0\xb4\xa3\x7e\x1f\xf8\x84\x20\xd6\xb4\x20\x45\x0e\xa4\x53\xac\x9b\xa6\x43\xc1\xe4\x89\x55\x32\xd4\x58\x25\xc3\x4a\x49\xb6\x23\x0a\x9a\xc9\xbb\xc1\x64\x26\x30\xed\x6d\x60\x7a\xa5\xcb\xee\x87\x74\xf8\x88\x8b\xa7\xc5\x71\xb0\x03\xe4\xf2\xdb\xb7\x0d\xec\xee\xdf\x27\xdf\x83\x80\xdf\x69\x31\x04\xd3\x92\xb3\xb6\x99\x90\x23\x96\x17\x65\x0c\xe4\x11\x14\x22\x28\xee\x04\xb9\x63\xc7\x34\xd3\x04\xaf\xbd\x36\xe2\x38\xb9\xbe\x8e\xab\x29\xfa\xea\x6a\x65\x81\x8c\xf5\x05\xba\x5e\x65\x31\xdd\x75\xd1\xd9\x90\x70\xa6\xf9\x6b\xdd\x42\x6e\x8f\x5b\xe7\x16\x19\xdd\x14\x33\xcf\x10\x9d\x46\x74\x3e\x59\x99\x3e\x2f\xb9\xeb\xf7\xee\xfb\x8b\x9f\xbd\x30\x72\xff\xc1\x23\x94\x6f\x99\xf0\xfe\xfd\x8b\xf5\x3b\x5b\x18\x0b\x32\x85\xf7\x20\x63\x33\x84\x9a\x5b\x27\xf9\x95\x3b\xfe\xfd\x8b\x2f\x80\xe4\x0e\xe2\x16\xd9\x42\xb9\xaf\x2d\xae\x2e\x2d\xbd\x00\x72\x7b\x94\x70\x62\x10\x7b\xcb\x24\xaf\x3d\x7a\x54\x7b\xf4\x22\x58\x9c\xe8\x65\xb6\x49\x52\x17\x34\xd3\xee\x94\x57\x44\x8e\xb3\xd4\xb2\x8d\x66\xc1\x64\x95\x71\x5c\x9e\x53\xc3\xcb\x3b\xaa\x8e\xf8\x0c\x42\x2e\x80\x36\xae\xc8\xb3\x29\xd6\xde\x1f\xc9\xc4\x1f\x5e\x99\x88\xdf\x8d\x48\xd6\x16\x4e\xa2\xc4\xe8\x7a\xdb\xe5\xd6\x08\xe4\x9c\x16\x15\xd9\x6c\x32\x1b\xa9\x1f\x36\xe7\x77\xca\x73\xc2\x20\x49\x0a\x47\x65\x31\x26\x1f\x4c\x43\xbb\x8a\x62\x99\x62\xf7\x54\x89\x6b\xd8\xd8\x98\x2a\x2a\xcc\x22\x33\x87\x9d\x4a\x2f\xb7\x30\xeb\xeb\xd6\xf0\x89\x53\x9e\x33\xd4\x20\x66\xfa\xf9\x4e\x41\xc3\x25\x10\x1e\xf2\x44\xaa\x2b\x39\x10\x16\x59\x5d\x78\x49\xe3\xe6\x46\x47\xc8\xad\xb4\xd5\xf3\x37\xcc\xeb\xd8\x9d\xfa\x55\x96\x91\xe7\x07\x1d\xec\xb2\xfa\xf4\x2f\xb5\x0f\xbf\xf8\xa7\x32\xca\x24\x23\xee\x04\xa7\xff\x6f\x76\xe9\x6a\xbd\x04\xb7\x21\x9e\x8b\x55\x32\xce\xae\xba\x78\xbc\xde\xa3\xb4\x6e\x41\x99\x90\x20\xca\x66\x57\xcf\xa9\x9d\x94\xd8\x50\x7b\x67\xbc\x41\x0e\x68\xcd\x6e\x5f\x70\xcb\xad\xa0\x39\x10\xbb\xa5\x9e\x9e\x82\x45\xb5\x52\x4f\x41\x52\x6f\x1d\x25\x91\x56\xc4\xef\xd8\x32\x6c\xf6\xb0\xcb\x36\x81\x5c\xa5\xa2\x3e\x4f\x36\x6b\x5a\x1d\xcf\x52\xd2\xc2\x90\x52\x32\xa3\x56\xbd\x4c\x2b\x4b\xc3\xae\x3e\xfd\xc8\xbf\xf5\x97\xb5\xbb\x0f\xd7\xde\x8b\x5f\xd8\x88\x75\x9d\x5a\xcc\x44\x7b\xe9\xdb\x0d\xe2\xcd\xed\x03\x83\xfd\x03\x7b\xc0\xec\xec\xec\x4e\x70\xd8\x35\xf2\x61\x83\xfe\xd9\xc2\x79\xff\xc9\x42\x6d\xf9\x7a\xfd\xe6\xfb\xf2\x26\x8f\x6c\xa6\x5f\xfe\x66\xf5\xd3\x7b\x4d\xdc\xcd\x83\x06\xa9\x9a\x52\x4f\x4f\x4f\xa0\xd6\x66\xa4\xf6\x6f\xfd\x54\xff\xe0\x92\xd4\x6d\x44\x61\x0e\x31\xa1\x0d\xca\xd0\x0c\x6f\xc7\x9d\xa1\xc7\xc4\x88\x02\x38\xd4\x83\x92\xb7\xa8\xa8\x03\x8d\xe6\x9a\x89\xa1\x4d\x2a\x29\x77\x4b\x9a\x54\x52\x75\xd4\x66\xa5\x80\xa8\x2a\xb1\x81\xe8\x8f\x70\x2b\x47\x66\x93\x22\x31\xaa\x0e\x72\x79\xc6\xe1\x87\x9c\x1b\xe6\x06\xeb\xf4\xdf\x24\x5c\x66\xbf\xab\x60\xed\x8a\x43\xca\x36\x4a\xa0\x90\x60\xe0\x94\x6c\xab\x14\x34\x6b\x57\xca\xec\xf5\x82\xa2\x61\x93\xe6\x45\x4b\x13\x33\x07\x37\x89\xc4\xcf\x9c\xc6\x02\xb8\x8c\xe5\x18\x74\x25\xd2\xae\x5c\x04\x97\x32\xf6\x65\x55\xde\xe9\x11\x24\x6d\x95\xb6\xa9\x2a\xa3\xf5\x94\xba\xd4\xd4\xb2\x5d\xc5\x69\x07\x42\xc9\x19\x94\xcc\xb4\xe5\x73\x1d\x73\xb7\x94\x36\xea\xc0\x7a\x37\x98\x92\x73\xd2\x4f\xd0\x32\x67\x62\xa7\x12\x98\x1d\x3b\x95\xa6\x0d\xb1\x53\x09\x65\xec\x90\x07\x6f\x7a\x30\xee\x1c\x51\x41\x4a\xb8\x96\x26\x8c\xc5\xc8\x18\x78\x57\x9b\x78\xab\xc3\x9e\xe6\xbb\x25\xff\xc2\x3f\xd6\x6e\xfc\x4f\xf6\x1e\xd5\x15\x91\xe6\xa5\x2d\xff\xf3\x6b\xfe\xe5\x87\x32\x7b\x59\xcf\x6b\x3b\x9d\xb2\x06\x1f\x32\xf0\x89\x7c\xe9\xd9\xc2\x79\x91\x1e\x74\x0c\x7a\x02\xf6\x5f\x61\x2f\x23\xec\x0d\xfe\x2b\xee\x81\x82\x47\x51\x4b\x2d\xaf\x06\x40\x05\xcd\xa3\x68\x83\xd9\x4e\xd3\x43\xe5\x75\x12\x10\x1c\x25\x64\xfd\x19\x64\xf2\x4c\x15\xd1\x39\x6d\x28\x3f\x98\x1f\x08\x7f\xe4\x99\x8d\x9d\xe0\x6f\x1a\x93\xac\x95\xf0\x62\x97\xa3\x0a\xc5\x7c\x4e\xa4\xb4\x70\xe8\x95\x61\xf5\xe8\x91\x21\x32\xb8\xff\x28\x3f\x3c\x35\xfd\xce\xe1\xa3\x43\xa7\x0f\x1c\x3f\xeb\x1c\xdb\x73\x74\x6c\x6a\x9c\x6a\xf4\xc0\x5e\xed\xa4\x57\xd9\x0d\x47\x7f\x7b\xe8\xc8\xcc\xc1\xfd\xc7\xde\x3c\x3e\xaa\x1d\xf2\x0e\x1d\x3c\xb8\x77\xc8\x7a\xdb\x3b\xb4\xeb\xe8\xd4\xf1\x16\x6e\x83\x12\xc6\x08\xc5\x15\xec\x16\x15\xe8\x12\x77\xce\x21\x55\x16\x5c\xc9\x0f\x44\x28\x75\x27\x8b\x47\x3c\x0f\xd1\xfc\x24\xd3\x06\xf2\x03\x83\xf9\xbd\x5a\xd5\x31\x1b\x83\x9d\xc5\x19\xf5\x8e\xeb\x15\x6b\xef\xab\x3b\xde\x19\x38\x79\x94\x4f\x0f\x8d\xbb\x7b\xde\x1a\x72\x2a\x27\x66\xad\xd3\x7b\x8f\x6a\x13\xc6\x49\x36\x7a\x62\x8f\x75\x1a\xeb\x6f\x0f\xed\x9d\xdc\x53\x86\x53\x07\x4f\xb0\xa9\xe9\xb7\xab\x6c\xba\x0c\xfb\xf5\xe1\x93\x9b\x2e\x4e\xf2\x7f\x3a\x93\xc9\xbf\xe9\xac\x2f\xcf\x91\xdf\x8e\xef\x9e\xf0\xd0\xa4\x35\x7c\xba\x7f\xd0\x7c\x65\xf2\x0d\xbe\x7b\xfa\xf5\x03\xaf\x95\x91\x76\xe4\xe4\x21\x3c\x3e\x3e\x71\xf2\xe4\xec\x44\xf9\xe0\x5b\x1e\x1e\x38\x76\xa6\xfa\xa6\x39\x3a\x37\x79\x1a\xd2\x5d\x3b\xf6\xec\x3e\xf1\xe6\x98\xf3\x8e\xbd\x21\x79\x82\x7b\x79\x5d\xc8\x24\xef\x5f\x69\x83\xf9\xbd\xf9\xe1\xf0\x47\x43\x94\x16\xba\x20\x92\x66\x61\x94\xab\x8e\xe5\xc3\x4b\x13\x98\x34\x47\xda\x71\x84\xf3\x23\xc7\x69\x93\x4c\x33\x88\xe3\x10\x41\x71\x3e\x2a\x41\x0b\xb8\x79\x65\x4c\x9b\x84\xd3\x50\x8e\x06\xa7\x4f\xf2\x3a\x5a\x51\x89\x0c\xcb\x75\xa7\x69\x85\x97\x7e\x37\xb6\x7f\xf4\xd4\xe8\xef\x7a\xc2\x01\x50\xfb\xe4\xa7\xfa\xe7\xcb\xcd\xd8\x1d\x0c\x97\xab\xae\xbc\x81\xd3\x68\xa2\x10\x7d\xb2\x0f\x9c\x6b\xea\x59\xd3\x80\x41\x5c\x46\x6c\x94\xb7\x49\xa5\x57\x6c\x18\x7d\xad\x12\xee\xe5\xde\xdc\xb6\x56\xc0\xcc\xf5\xe5\x05\x8f\xbd\x2f\x07\x48\xf2\x22\x04\xf6\xe6\xb8\x7c\x92\x98\x84\x9d\x4a\xae\x2f\x2f\x6a\xde\xde\x1c\xa3\x46\x6e\x27\xc8\xc5\x8e\x15\x7f\xd3\x3c\x56\xdc\xde\x3a\x56\xdc\x8e\xcd\x62\x0e\xec\x00\x31\xfc\xd8\x0c\x4f\x98\x82\xee\x5d\xe4\xb1\x44\xde\xaa\x9b\xdb\x78\x08\x33\xfe\x5c\x5f\x3e\x10\xa1\x37\x27\x54\x90\x0b\x81\xe6\x13\x5a\x8b\x6e\xab\xed\x8a\x0b\x8a\xe9\xf5\x35\x17\x63\x5a\x60\x69\xe3\x27\xb2\xf3\x6c\x40\x93\xcd\xc0\x9c\x98\xd3\x51\xfc\xe6\xde\xdf\x41\x01\xbf\xff\x7d\x50\x53\xb5\xd6\x95\x26\xff\xb2\x56\x08\xfe\xb3\x58\xfa\xbf\x00\x00\x00\xff\xff\x49\xd0\xbd\xa9\x7f\x39\x00\x00")

func templateDefaultIndexGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateDefaultIndexGohtml,
		"template/default/index.gohtml",
	)
}

func templateDefaultIndexGohtml() (*asset, error) {
	bytes, err := templateDefaultIndexGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/default/index.gohtml", size: 14719, mode: os.FileMode(420), modTime: time.Unix(1625035103, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/default/index.gohtml": templateDefaultIndexGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"default": &bintree{nil, map[string]*bintree{
			"index.gohtml": &bintree{templateDefaultIndexGohtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
